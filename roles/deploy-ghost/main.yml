---
- name: Deploy Ghost
  hosts: localhost
  become: true
  vars:
    gosu_version: 1.12
    dpkg_arch: "{{ dpkg_arch }}"
    node_env: production
    ghost_cli_version: 1.23.1
    ghost_install: /var/lib/ghost
    ghost_content: /var/lib/ghost/content
    ghost_version: 5.14.1
  tasks:
    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - dirmngr
          - gnupg
          - wget
        update_cache: yes

    - name: Download gosu binary
      command: wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/{{ gosu_version }}/gosu-{{ dpkg_arch }}"

    - name: Download gosu asc file
      command: wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/{{ gosu_version }}/gosu-{{ dpkg_arch }}.asc"

    - name: Import gosu GPG key
      shell: gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4

    - name: Verify gosu signature
      shell: gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu

    - name: Remove gosu asc file
      file:
        path: /usr/local/bin/gosu.asc
        state: absent

    - name: Set execute permission on gosu binary
      file:
        path: /usr/local/bin/gosu
        mode: '+x'

    - name: Verify that gosu binary works
      shell: gosu --version
      register: gosu_output

    # Ghost-CLI installation
    - name: Instalar o Ghost-CLI globalmente usando o npm
      command: npm install -g "ghost-cli@{{ ghost_cli_version }}"
      register: ghost_cli_install

    - name: Limpar o cache do npm
      command: npm cache clean --force
      when: ghost_cli_install.changed

    # Ghost installation
    - name: Criar diretório GHOST_INSTALL
      file:
        path: "{{ ghost_install }}"
        state: directory
        owner: node
        group: node

    - name: Instalar o Ghost usando o Ghost-CLI
      command: "ghost install {{ ghost_version }} --db mysql --dbhost mysql --no-prompt --no-stack --no-setup --dir {{ ghost_install }}"
      register: ghost_install
      when: ghost_cli_install.changed

    - name: Instalar pacotes opcionais do Ghost
      command: "cd {{ ghost_install }}/current && yarn add {{ item }} --force"
      with_items:
        - sharp@{{ ghost_sharp_version }}
        - sqlite3@{{ ghost_sqlite3_version }}
      when: ghost_install.changed
      register: ghost_optional_install

    - name: Configurar o Ghost para escutar em todos os IPs e não solicitar configuração adicional
      command: "cd {{ ghost_install }} && ghost config --no-prompt --ip '::' --port 2368 --url 'http://localhost:2368'"
      when: ghost_install.changed

    - name: Configurar o caminho do conteúdo do Ghost
      command: "cd {{ ghost_install }} && ghost config paths.contentPath {{ ghost_content }}"
      when: ghost_install.changed

    - name: Criar um link simbólico para o arquivo de configuração do Ghost
      file:
        src: "{{ ghost_install }}/config.production.json"
        dest: "{{ ghost_install }}/config.development.json"
        state: link
      when: ghost_install.changed
