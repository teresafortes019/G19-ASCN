---

- name: Service Ghost
  shell: kubectl apply -f roles/deploy-ghost/kubernetes/ghost-service.yml

#Get service ip and update kubernetes deployment file
- name: Get external service ip
  shell: kubectl get services -l app=ghost -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}'
  register: ghost_ip
  until: ghost_ip.stdout != ""
  retries: 10
  delay: 10

- name: Update variable
  set_fact:
    ghost_ip: "{{ ghost_ip.stdout }}"

- name: Update kubernetes deployment file
  template:
    src: ghost-deployment.yml
    dest: roles/deploy-ghost/kubernetes/ghost-deployment.yml



- name: Ghost Deployment
  shell: |
    export PASSWORD={{ admin_password }}
    export PASSWORD_MAIL={{ mail_password }}
    envsubst < roles/deploy-ghost/kubernetes/ghost-deployment.yml | kubectl apply -f -
    unset PASSWORD
    unset PASSWORD_MAIL

- name: Get MySQL Pod Name
  shell: kubectl get pods -l app=mysql -o jsonpath='{.items[0].metadata.name}'
  register: mysql_pod_name
  until: mysql_pod_name.stdout != ""
  
- name: Wait for MySQL Users table to be ready
  shell: kubectl exec {{ mysql_pod_name.stdout }} -- mysql --user="admin" --password="{{admin_password}}" --database="ghost" --execute="select * from users;"
  register: mysql_users_table

- name: Create admin inside DB
  shell: kubectl exec {{ mysql_pod_name.stdout }} -- mysql --user="admin" --password="{{admin_password}}" --database="ghost" --execute="update users set name='{{ ghost_user }}', password='{{ ghost_password }}', email='{{ ghost_email }}', status='active' where id=1;"
  

# Create Horizontal Pod Autoscaler
- name: Create HPA
  shell: kubectl apply -f manifest/hpa.yml